apply plugin: 'nebula.maven-publish'
apply plugin: 'nebula.source-jar'
apply plugin: 'java-library'
apply from: "${rootDir}/gradle/publish-jar.gradle"

// TODO(gatesn): Use the BaselineRefaster plugin to generate default rules.
sourceSets {
    refaster {
        java {
            srcDirs = ['src/refaster/java']
        }
    }
}

configurations {
    refaster
}

dependencies {
    refaster 'com.google.errorprone:error_prone_refaster'
}

task compileRefaster {}

for (File refasterRule : sourceSets.refaster.getAllJava()) {
    String refasterRuleName = refasterRule.getName().take(refasterRule.getName().lastIndexOf('.'))
    String outputFile = "${project.buildDir}/refaster/${refasterRuleName}.refaster"

    task "compileRefaster${refasterRuleName}"(type: JavaCompile) { task ->
        task.source = refasterRule
        task.classpath = configurations.refaster
        task.destinationDir = task.getTemporaryDir()

        // We want to use the errorprone compiler, but replace the default arguments with the refaster plugin
        task.options.compilerArgumentProviders.clear()
        task.options.compilerArgs = ["-Xplugin:RefasterRuleCompiler --out ${outputFile  }"]

        inputs.file(refasterRule)
        outputs.file(outputFile)

        project.tasks.compileRefaster.dependsOn task
    }
}
