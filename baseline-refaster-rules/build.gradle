apply plugin: 'java-library'
apply plugin: 'com.palantir.external-publish-jar'

dependencies {
    implementation 'com.google.errorprone:error_prone_refaster'
    implementation 'org.mockito:mockito-core'
    implementation 'com.palantir.tritium:tritium-registry'

    testImplementation 'junit:junit'
    testImplementation project(':baseline-refaster-testing')
    testImplementation 'org.immutables:value::annotations'

    compileOnly 'org.immutables:value::annotations'
}

// Do not apply refaster rules
tasks.compileRefaster.enabled = false
tasks.compileJava.onlyIf { project.properties.refasterApply == null }
// Do not apply errorprone rules
tasks.compileJava.options.errorprone.enabled = false
tasks.checkClassUniqueness.enabled = false

moduleJvmArgs {
    exports = [
            'jdk.compiler/com.sun.tools.javac.api',
            'jdk.compiler/com.sun.tools.javac.file',
            'jdk.compiler/com.sun.tools.javac.code',
            'jdk.compiler/com.sun.tools.javac.util',
            'jdk.compiler/com.sun.tools.javac.comp',
            'jdk.compiler/com.sun.tools.javac.main',
            'jdk.compiler/com.sun.tools.javac.model',
            'jdk.compiler/com.sun.tools.javac.parser',
            'jdk.compiler/com.sun.tools.javac.processing',
            'jdk.compiler/com.sun.tools.javac.tree',
            'jdk.compiler/com.sun.tools.javac.util'
    ]
    opens = ['jdk.compiler/com.sun.tools.javac.comp']
}