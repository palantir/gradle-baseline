import net.ltgt.gradle.errorprone.CheckSeverity

apply plugin: 'nebula.maven-publish'
apply plugin: 'nebula.source-jar'
apply plugin: 'java-library'
apply from: "${rootDir}/gradle/publish-jar.gradle"

dependencies {
    compile 'com.google.errorprone:error_prone_core'

    testCompile gradleApi()
    testCompile 'com.palantir.tokens:auth-tokens'
    testCompile 'com.fasterxml.jackson.core:jackson-annotations'
    testCompile 'com.google.errorprone:error_prone_test_helpers'
    testCompile 'com.palantir.safe-logging:preconditions'
    testCompile 'com.palantir.safe-logging:safe-logging'
    testCompile 'org.slf4j:slf4j-api'
    testCompile 'org.apache.commons:commons-lang3'
    testCompile 'commons-lang:commons-lang'
    testCompile 'org.assertj:assertj-core'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-migrationsupport'

    annotationProcessor 'com.google.auto.service:auto-service'
    compileOnly 'com.google.auto.service:auto-service'
}

// Incorrectly identifies tests as junit4 usage
tasks.checkJUnitDependencies.enabled = false
tasks.withType(JavaCompile) {
    options.errorprone {
        check("StrictUnusedVariable", CheckSeverity.OFF)
    }
}

// This is necessary to prevent the errorprone plugin from using this very project's output directory
def originalGroup = project.group
group = originalGroup + '-internal'
publishing.publications.nebula {
    groupId = originalGroup
}
