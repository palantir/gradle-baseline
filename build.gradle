import net.ltgt.gradle.errorprone.CheckSeverity

buildscript {
    repositories {
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.diffplug.gradle:goomph:3.32.1'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.11.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.10.0'
        classpath 'com.gradle.publish:plugin-publish-plugin:0.21.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:4.120.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.23.0'
    }
}

plugins {
    id 'com.palantir.git-version' version '0.15.0'
    id 'org.inferred.processors' version '3.6.0'
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.baseline-java-versions'

allprojects {
    repositories {
        gradlePluginPortal()
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    // Since we are using gradle-baseline in gradle-baseline we need to undo forces on project dependencies. Following
    // snippet forces the version to be the version originally resolved by gradle and not the force that nebula forced
    // it to.
    configurations.all { c ->
        c.resolutionStrategy { preferProjectModules() }
    }

    pluginManager.withPlugin('java') {
        tasks.withType(JavaCompile) {
            options.compilerArgs += ['-Werror', '-Xlint:deprecation']
            options.errorprone {
                check("Slf4jLogsafeArgs", CheckSeverity.OFF)
                check("PreferSafeLoggableExceptions", CheckSeverity.OFF)
                check("PreferSafeLogger", CheckSeverity.OFF)
                check("PreferSafeLoggingPreconditions", CheckSeverity.OFF)
                check("PreconditionsConstantMessage", CheckSeverity.OFF)
            }
        }
    }

    apply plugin: 'org.inferred.processors'
    apply plugin: 'com.palantir.java-format'

    group = 'com.palantir.baseline'
    version System.env.CIRCLE_TAG ?: gitVersion()
    description = 'A Gradle plugin for applying Baseline-recommended build and IDE settings'
}

javaVersions {
    libraryTarget = 11
    runtime = 15
}
