import net.ltgt.gradle.errorprone.CheckSeverity

buildscript {
    repositories {
        jcenter()
        gradlePluginPortal()
        maven { url  "http://palantir.bintray.com/releases" }
    }

    dependencies {
        classpath 'com.gradle.publish:plugin-publish-plugin:0.10.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:14.1.1'
        classpath 'com.netflix.nebula:gradle-info-plugin:5.2.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:2.28.3'
    }
}

plugins {
    id 'com.palantir.git-version' version '0.12.2'
    id 'org.inferred.processors' version '3.1.0'
}

apply plugin: 'com.palantir.baseline'

allprojects {
    repositories {
        jcenter()
        gradlePluginPortal()
        maven { url  "http://palantir.bintray.com/releases" }
    }

    // Since we are using gradle-baseline in gradle-baseline we need to undo forces on project dependencies. Following
    // snippet forces the version to be the version originally resolved by gradle and not the force that nebula forced
    // it to.
    configurations.all { c ->
        c.incoming.beforeResolve {
            c.resolutionStrategy.dependencySubstitution {
                all { DependencySubstitution dep ->
                    if (dep.requested instanceof ProjectComponentSelector) {
                        dep.useTarget dep.requested
                    }
                }
            }
        }
    }

    pluginManager.withPlugin('java') {
        sourceCompatibility = 1.8
        tasks.withType(JavaCompile) {
            options.compilerArgs += ['-Werror', '-Xlint:deprecation']
            options.errorprone {
                check("Slf4jLogsafeArgs", CheckSeverity.OFF)
                check("PreferSafeLoggableExceptions", CheckSeverity.OFF)
                check("PreferSafeLoggingPreconditions", CheckSeverity.OFF)
                check("PreconditionsConstantMessage", CheckSeverity.OFF)
            }
        }
    }

    apply plugin: 'org.inferred.processors'

    group = 'com.palantir.baseline'
    version System.env.CIRCLE_TAG ?: gitVersion()
    description = 'A Gradle plugin for applying Baseline-recommended build and IDE settings'
}

